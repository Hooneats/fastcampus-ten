plugins {
    id 'java'
}

group 'org.example'
version 'unspecified'

repositories {
    mavenCentral()
}

dependencies {
    // spring docs
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.12'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest' // data-rest -> rest api
    implementation 'org.springframework.data:spring-data-rest-hal-explorer' // data rest visible web -> http://localhost:8080/api
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // User Custom properties file elements
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // therapi
    annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5' // thymeleaf+security

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly 'org.springframework.boot:spring-boot-devtools' // thymeleaf 의 화면 캐시를 끔

    testRuntimeOnly 'com.h2database:h2' // test module application.properties
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // security test
    testImplementation 'org.springframework.security:spring-security-test'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-collections'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // QueryDsl JPAAnnotationProcessor
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

}

test {
    useJUnitPlatform()
}

// QueryDSL 설중부
def generated = 'src/main/generated' // gradle 빌드와 IDEA 인 IntelliJ 빌드를 같게하기위해 Q파일 생성위치 변경
// QueryDSL QClass 파일 생성 위치 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}
// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}
// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

// Heroku 설정
jar {
    manifest {
        attributes('Main-Class': 'com.fastcampus.projectboard.FastCampusProjectBoardApplication')
    }
}